<!--确认订单-->
<template>
  <view class="comfire_order">
    <view class="address" @tap="setAddress">
      <view class="empty_address" wx:if="{{!is_exit_address}}">
        <view class="title">设置收货地址</view>
        <view class="arrow">&gt;</view>
      </view>
      <view class="address_info" wx:else>
        <view class="title">
          <view class="user_info">
            <text class="name">{{address.name}}</text>
            <text class="phone">{{address.phone}}</text>
          </view>
          <view class="active_address">
            <text class="defult" wx:if="{{address.isDefault==1}}"> [默认]</text>
            {{address.address}}
          </view>
        </view>
        <view class="arrow">&gt;</view>
      </view>
    </view>
    <view class="spacing"></view>


<view class="goodsList">
<view class="list_box">
  <view  wx:for="{{list}}" wx:key="index" wx:index="index" wx:item="item" class="goods-info">
    <view class="img-box">
      <image src="{{item.thumLogo}}" class="img" />
    </view>
    <view class="text-box">
      <view class="goods-title">{{item.specification}}</view>
      <view class="goods-label">["{{item.categoryName}}","{{item.exchangeCodeDesc}}"]</view>
      <view class="goods-price">{{item.integral}}积分</view>
      <view class="buy-num">
        数量：{{item.num}}{{item.unit}}
        <!-- <view class="jian-btn {{item.num==1? 'disabled' : ''}}" catchtap="jianBtnTap" data-index="{{index}}" data-id="{{item.id}}">-</view> -->
        <!-- <input type="number" value="{{item.num}}" disabled/> -->
        <!-- <view class="jia-btn " catchtap="jiaBtnTap" data-index="{{index}}" data-id="{{item.id}}">+</view> -->
      </view>
    </view>
  </view>
</view>
</view>
      <view class="spacing"></view>
       <view class="order_info">
        <view class="block">
          <view class="left">买家备注:</view>
          <view class="right input_box">
            <input bindinput="bindKeyInput" placeholder="填写备注信息" />
          </view>
        </view>
        <view class="block">
        <view class="left total_jf">可用积分</view>
        <view class="right">{{canUsePrice}}积分</view>
      </view>
      <view class="spacing"></view>
      <view class="block">
        <view class="left tongji">支付积分</view>
        <view><view class="right price">{{totalPrice}}积分</view></view>
      </view>
    </view>
    <view class="pay_box">
      <form report-submit bindsubmit="goPay" >
        <button form-type="submit" class="button type_green" wx:if="{{canUsePrice >= totalPrice}}" >下单支付</button>
        <button form-type="button" class="button" wx:if="{{canUsePrice < totalPrice}}" disabled>积分不足</button>
      </form>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
// import api from '@/api/api';
import dzapi from '@/api/dzapi';
import tip from '@/utils/tip';
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  ADDRESS_ID
} from '@/utils/constant';
export default class ComfireOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
  }
  components = {
  }

  data = {
    list: [],
    goodsId: "",
    sellerMessage: "",

    //是否存在默认地址
    is_exit_address: false,
    address: {},
    //总价
    totalPrice:0,
    canUsePrice : 0,
    purchaseType : 1,
    operating: false
  }

  //获取订单详情
  async getOrderDetailInfo() {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await dzapi.getPayOrder({
      query: {
        wxopenid: openId
      }
    });
    if (json.data.success == true) {
      let data = json.data.result;
      this.list = data.items;
      this.totalPrice = data.totalPrice;
      this.canUsePrice = data.integral;
      const addid = wepy.getStorageSync(ADDRESS_ID);
      //console.log('addid:'+addid);
      if(addid){
        this.getAddressInfo(addid);
      } else {
        this.is_exit_address = data.isExitAddress;
        this.address = data.defaultAddress;
      }
    } else {
      tip.error(json.data.error.msg)
    }
    that.$apply();
  }

  async getAddressInfo(id) {
    let that = this;
    // let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const json = await dzapi.receiverInfoById({
      query: {
        id: id
      }
    });
    if (json.data.success == true) {
      this.is_exit_address = true;
      this.address = json.data.result;
      //清除缓存 下次进入恢复默认
      wepy.removeStorageSync(ADDRESS_ID);
    } else {
      tip.error(json.data.error.msg)
    }
    that.$apply();
  }

  onLoad(option) {
    let that = this;
    this.canUsePrice = 0;
    this.totalPrice = 0;
    this.operating = false;
    that.goodsId = option.goodsId==undefined?"":option.goodsId;
    this.purchaseType = option.purchasetype==undefined?"1":option.purchasetype;
    /*that.list = bb.result.products;
    console.log(bb.result.products)*/
    that.getOrderDetailInfo();

    //let from = option.from==undefined?"":option.from;
    //if (from=="selAdd") {
    //  this.getAddressInfo(wepy.getStorageSync(ADDRESS_ID));
    //}
    // else{
    // }
  }
  computed = {

  }

  async goToPay(formId) {
    //测试调用接口用，可注释
    tip.loading("提交订单中");
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await dzapi.saveOrder({
      query: {
        wxOpenId: openId,
        deliveryId: this.address.id,
        remark: this.sellerMessage
      },
      method: 'POST'
    });

    if (json.data.success == true) {
      const result = json.data.result;
      if(result.code == 0){
          //console.log('result：', result)
          //setTimeout(() => {
            //支付成功 关闭loadding 跳转到支付成功页面
            tip.loaded();
            wepy.redirectTo({
              url: "/pages/pay_success?orderNo="+ result.data.orderNo + "&totalFee=" + result.data.totalPrice
            });
          //}, 2000)
      } else {
        tip.loaded();
        tip.confirm(result.msg, false).then(() => {
          wepy.switchTab({url: "/pages/home"});
        });
        /*setTimeout(() => {
          //支付失败 关闭loadding 
          tip.loaded();
          wepy.redirectTo({
            url: "/pages/order"
          })
        }, 4000)*/
      }
    } else {
        tip.error(json.data.error.msg)
    }
      /*
      //保存成功了后进行微信支付
      const pay = await api.toPay({
        query:{
          openId: openId,
          orderNo: json.data.tradeNo
        }
      });
      if (pay.data.code==0) {
        //以下是微信支付
        wx.requestPayment({
          appId: pay.data.appId,
          timeStamp: pay.data.timeStamp,
          nonceStr: pay.data.nonceStr,
          package: pay.data.package,
          signType: 'MD5',
          paySign: pay.data.paySign,
          success: function (res) {
            console.log('pay', res)
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/pay_success?orderNo="+json.data.tradeNo
              })
            }, 2000)
          },
          fail: function (res) {
            tip.alert('支付失败');
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/order"
              })
            }, 2000)
          }
        })
      } else {
        tip.alert('支付失败');
        setTimeout(() => {
          //支付成功 关闭loadding 跳转到支付成功页面
          tip.loaded();
          wepy.navigateTo({
            url: "/pages/order"
          })
        }, 2000)
      }
    } else {
      tip.error(json.data.msg)
    }
    */
  }

  methods = {
    handleDelItem(itemData) {
      this.deleteGoods(itemData);
    },
    bindKeyInput(e) {
      this.sellerMessage = e.detail.value;
      console.log("====" + e.detail.value);
    },
    async goPay(e) {
      var fId = e.detail.formId;
      if (!this.is_exit_address) {
        await tip.confirm('你未设置收货地址，请设置地址');
        wepy.redirectTo({
          url: "/pages/address?type=order"
        })
        return false;
      }
      this.goToPay(fId);
    },
    setAddress() {
      /*wepy.redirectTo({
        url: "/pages/address?type=order"
      })*/
      wepy.redirectTo({
        url: "/pages/address?type=order"
      });
    }
  }
  events = {

  }
}

</script>
<style lang="less">
.address {
  border-top: 1px solid #efefef;
  background: #fff;
  .empty_address,
  .address_info {
    display: flex;
    justify-content: space-between;
    height: 103rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    .title {
      color: #000;
    }
    .arrow {
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
  .address_info {
    height: 150rpx;
  }
}

.order_info {
  .block {
    display: flex;
    justify-content: space-between;
    height: 91rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    border-bottom: 1px solid #efefef;
    background: #fff;
    .txt {
      font-size: 32rpx;
    }
    .left {
      color: #000;
    }
    .right {
      color: #9a9a9a;
      text-align: right;
    }
    .price {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .tongji {
      font-size: 32rpx;
    }
    .input_box {
      flex: 1;
      margin-left: 20rpx;
    }
    .total_jf{
      font-size: 32rpx;
    }
  }
}
.list_box {
  //height: 250rpx;
  height:auto;
}

.goods-info {
  border-bottom: 1px solid #eee;
  display: flex;
  padding: 20rpx;
  box-sizing: border-box;
  position: relative;
  background: #fff;
}

.goods-info .img-box {
  width: 160rpx;
  height: 160rpx;
  overflow: hidden;
  margin-right: 28rpx;
  background-color: #d8d8d8;
}

.goods-info .text-box {
  width: 480rpx;
}

.goods-info .text-box .goods-title {
  font-size: 32rpx;
  color: #414141;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 10rpx 20rpx 5rpx 0;
}

.goods-info .text-box .goods-label {
  font-size: 26rpx;
  color: #999;
  height: 38rpx;
  line-height: 38rpx;
  margin: 8rpx 0 25rpx 0;
}

.goods-info .text-box .goods-price {
  font-size: 34rpx;
  color: #e64340;
}

.goods-info .text-box .buy-num {
  width: 164rpx;
  height: 48rpx;
  line-height: 48rpx;
  position: absolute;
  right: 30rpx;
  //bottom: 30rpx;
  bottom: 15rpx;
  display: flex;
  font-size: 24rpx;
  text-align: center;
  color: #e64340;
}

.goods-info .text-box .buy-num .jian-btn {
  width: 48rpx;
  height: 100%;
  border-left: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-left-radius: 6rpx;
  border-top-left-radius: 6rpx;
}

.goods-info .text-box .buy-num .jian-btn.disabled {
  background-color: #f5f5f9;
  border-left: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num .jia-btn {
  width: 48rpx;
  height: 100%;
  border-right: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-right-radius: 6rpx;
  border-top-right-radius: 6rpx;
}

.goods-info .text-box .buy-num .jia-btn.disabled {
  background-color: #f5f5f9;
  border-right: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num input {
  width: 68rpx;
  height: 48rpx;
  min-height: 48rpx;
  text-align: center;
  font-size: 24rpx;
  border: 1rpx solid #ccc;
}

.goods-info .img-box .img {
  width: 160rpx;
  height: 160rpx;
}

.pay_box {
  margin-top: 104rpx;
  padding: 0 22rpx;
}
.dk-jf {
  text-align: right;
  color: #666;
}
</style>
